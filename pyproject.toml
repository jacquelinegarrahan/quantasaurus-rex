[tool.poetry]
name = "quantasaurus-rex"
version = "1.0.0"
description = "An intelligent portfolio recommendation bot that delivers daily AI-powered investment insights via email"
authors = ["Quantasaurus-Rex <quantasaurus-rex@yourdomain.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/your-org/quantasaurus-rex"
repository = "https://github.com/your-org/quantasaurus-rex"
documentation = "https://github.com/your-org/quantasaurus-rex#readme"
keywords = ["finance", "portfolio", "investment", "ai", "robinhood", "aws", "lambda"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "quantasaurus"}]

[tool.poetry.dependencies]
python = "^3.11"

# Core AWS and Lambda Dependencies
boto3 = "^1.26.0"
botocore = "^1.29.0"

# AI and Machine Learning
langchain = "^0.1.0"
openai = "^1.0.0"
langchain-openai = "^0.1.0"
langchain-community = "*"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"

# Data Collection APIs
robin-stocks = "3.4.0"
tavily-python = "^0.3.0"
requests = "^2.31.0"
urllib3 = "^2.0.0"
pyotp = "^2.3.0"

# Data Processing and Analysis
pandas = "^2.0.0"
numpy = "^1.24.0"
yfinance = "^0.2.0"
python-dateutil = "^2.8.0"

# Email Generation and Templates
jinja2 = "^3.0.0"
premailer = "^3.10.0"
beautifulsoup4 = "^4.12.0"
markdown = "^3.4.0"

# Configuration and Environment
python-dotenv = "^1.0.0"

# Logging and Monitoring
structlog = "^23.0.0"
boto3-stubs = {extras = ["essential"], version = "^1.26.0"}

[tool.poetry.group.dev.dependencies]
# Testing Dependencies
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
moto = "^4.0.0"
responses = "^0.23.0"

# Development Tools
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
isort = "^5.12.0"
pre-commit = "^3.0.0"

# Additional development utilities
pip-review = "^1.3.0"
memory-profiler = "^0.60.0"
types-requests = "^2.32.4.20250611"

[tool.poetry.group.aws.dependencies]
# AWS deployment dependencies
awscli = "^1.32.0"
aws-sam-cli = "^1.100.0"

[tool.poetry.scripts]
quantasaurus = "lambda_function:local_test_handler"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    ".eggs",
    "*.egg",
    "dist",
    "build",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "robin_stocks.*",
    "tavily.*",
    "moto.*",
    "responses.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "quantasaurus/tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests that require API access",
]

[tool.coverage.run]
source = ["quantasaurus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]